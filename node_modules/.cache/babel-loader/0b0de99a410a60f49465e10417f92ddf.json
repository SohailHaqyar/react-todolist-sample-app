{"ast":null,"code":"import _classCallCheck from \"/react/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/react/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/react/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/react/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/react/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/react/todolist/src/components/taskComponent.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteTaskAction, completeTaskAction, cloneTaskAction as _cloneTaskAction } from '../actions/tasksActions';\nimport { Icon, Button } from 'react-materialize';\nimport Lottie from 'react-lottie';\nimport anim from '../images/checked_done_.json';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tasks: state.tasksReducer.tasks\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    deleteTask: function deleteTask(id) {\n      return dispatch(deleteTaskAction(id));\n    },\n    completeTask: function completeTask(id) {\n      return dispatch(completeTaskAction(id));\n    },\n    cloneTaskAction: function cloneTaskAction(id, description, status, time) {\n      return dispatch(_cloneTaskAction(id, description, status, time));\n    }\n  };\n};\n\nvar Task =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Task, _Component);\n\n  function Task() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Task);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Task)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      done: true\n    };\n\n    _this.deleteTask = function () {\n      _this.props.deleteTask(_this.props.id);\n    };\n\n    _this.completeTask = function () {\n      _this.props.completeTask(_this.props.id);\n    };\n\n    _this.cloneTask = function () {\n      var id = _this.props.id + 1;\n\n      _this.props.cloneTaskAction(id, _this.props.description, _this.props.status, _this.props.time);\n    };\n\n    return _this;\n  }\n\n  _createClass(Task, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          description = _this$props.description,\n          time = _this$props.time,\n          id = _this$props.id;\n      return React.createElement(\"tr\", {\n        className: \"taskItem\",\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Lottie, {\n        options: {\n          loop: false,\n          autoplay: false,\n          animationData: anim,\n          rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n          }\n        },\n        isStopped: true,\n        onClick: this.completeTask,\n        height: 100,\n        width: 100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, description), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, time, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Button, {\n        floating: true,\n        onClick: this.cloneTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Clone\"), React.createElement(Button, {\n        floating: true,\n        onClick: this.deleteTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"delete_forever\"))));\n    }\n  }]);\n\n  return Task;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Task);","map":{"version":3,"sources":["/react/todolist/src/components/taskComponent.js"],"names":["React","Component","connect","deleteTaskAction","completeTaskAction","cloneTaskAction","Icon","Button","Lottie","anim","mapStateToProps","state","tasks","tasksReducer","mapDispatchToProps","dispatch","deleteTask","id","completeTask","description","status","time","Task","done","props","cloneTask","loop","autoplay","animationData","rendererSettings","preserveAspectRatio"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,EAA+CC,eAAe,IAAfA,gBAA/C,QAAsE,yBAAtE;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChCC,IAAAA,KAAK,EAAED,KAAK,CAACE,YAAN,CAAmBD;AADM,GAAZ;AAAA,CAAxB;;AAIA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACtCC,IAAAA,UAAU,EAAE,oBAACC,EAAD;AAAA,aAAQF,QAAQ,CAACZ,gBAAgB,CAACc,EAAD,CAAjB,CAAhB;AAAA,KAD0B;AAEtCC,IAAAA,YAAY,EAAE,sBAACD,EAAD;AAAA,aAAQF,QAAQ,CAACX,kBAAkB,CAACa,EAAD,CAAnB,CAAhB;AAAA,KAFwB;AAGtCZ,IAAAA,eAAe,EAAE,yBAACY,EAAD,EAAIE,WAAJ,EAAgBC,MAAhB,EAAuBC,IAAvB;AAAA,aAAgCN,QAAQ,CAACV,gBAAe,CAACY,EAAD,EAAIE,WAAJ,EAAgBC,MAAhB,EAAuBC,IAAvB,CAAhB,CAAxC;AAAA;AAHqB,GAAf;AAAA,CAA3B;;IAMMC,I;;;;;;;;;;;;;;;;;UAEJX,K,GAAQ;AACNY,MAAAA,IAAI,EAAE;AADA,K;;UAIRP,U,GAAa,YAAM;AACjB,YAAKQ,KAAL,CAAWR,UAAX,CAAsB,MAAKQ,KAAL,CAAWP,EAAjC;AACD,K;;UAEDC,Y,GAAe,YAAM;AACnB,YAAKM,KAAL,CAAWN,YAAX,CAAwB,MAAKM,KAAL,CAAWP,EAAnC;AACD,K;;UAEDQ,S,GAAY,YAAM;AAChB,UAAIR,EAAE,GAAG,MAAKO,KAAL,CAAWP,EAAX,GAAc,CAAvB;;AACA,YAAKO,KAAL,CAAWnB,eAAX,CAA2BY,EAA3B,EAA8B,MAAKO,KAAL,CAAWL,WAAzC,EAAqD,MAAKK,KAAL,CAAWJ,MAAhE,EAAuE,MAAKI,KAAL,CAAWH,IAAlF;AACD,K;;;;;;;6BAEQ;AAAA,wBAC4B,KAAKG,KADjC;AAAA,UACCL,WADD,eACCA,WADD;AAAA,UACeE,IADf,eACeA,IADf;AAAA,UACqBJ,EADrB,eACqBA,EADrB;AAEP,aACE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAyB,QAAA,GAAG,EAAEA,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AACbS,UAAAA,IAAI,EAAE,KADO;AAEbC,UAAAA,QAAQ,EAAE,KAFG;AAGbC,UAAAA,aAAa,EAAEnB,IAHF;AAIboB,UAAAA,gBAAgB,EAAE;AACdC,YAAAA,mBAAmB,EAAE;AADP;AAJL,SAAjB;AAQA,QAAA,SAAS,EAAE,IARX;AASA,QAAA,OAAO,EAAE,KAAKZ,YATd;AAUA,QAAA,MAAM,EAAE,GAVR;AAWA,QAAA,KAAK,EAAE,GAXP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMC,WAAN,CAhBF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAME,IAAN,MAjBF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,OAAO,EAAE,KAAKI,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,OAAO,EAAE,KAAKT,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2C,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA3C,CAFF,CAlBF,CADF;AAyBD;;;;EA9CgBf,S;;AAiDnB,eAAeC,OAAO,CAACQ,eAAD,EAAiBI,kBAAjB,CAAP,CAA4CQ,IAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { deleteTaskAction, completeTaskAction, cloneTaskAction } from '../actions/tasksActions';\nimport { Icon, Button } from 'react-materialize';\nimport Lottie from 'react-lottie';\nimport anim from '../images/checked_done_.json';\n\nconst mapStateToProps = (state) => ({\n    tasks: state.tasksReducer.tasks\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    deleteTask: (id) => dispatch(deleteTaskAction(id)),\n    completeTask: (id) => dispatch(completeTaskAction(id)),\n    cloneTaskAction: (id,description,status,time) => dispatch(cloneTaskAction(id,description,status,time))\n});\n\nclass Task extends Component {\n\n  state = {\n    done: true\n  };\n\n  deleteTask = () => {\n    this.props.deleteTask(this.props.id);\n  }\n\n  completeTask = () => {\n    this.props.completeTask(this.props.id);\n  }\n\n  cloneTask = () => {\n    var id = this.props.id+1;\n    this.props.cloneTaskAction(id,this.props.description,this.props.status,this.props.time);\n  }\n  \n  render() {  \n    const { description,  time, id } = this.props;\n    return (\n      <tr className=\"taskItem\" key={id}>\n        <td align=\"center\">\n            <Lottie options={{\n                loop: false,\n                autoplay: false, \n                animationData: anim,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            }}\n            isStopped={true}\n            onClick={this.completeTask}\n            height={100}\n            width={100}\n          />  \n        </td>\n        <td>{ description }</td>\n        <td>{ time } </td>\n        <td>\n          <Button floating onClick={this.cloneTask}>Clone</Button>\n          <Button floating onClick={this.deleteTask}><Icon>delete_forever</Icon></Button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Task);\n"]},"metadata":{},"sourceType":"module"}